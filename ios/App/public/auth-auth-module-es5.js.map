{"version":3,"sources":["./src/app/auth/auth.page.html","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.scss","./src/app/auth/auth.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gxE;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACAb;AACL;AACJ;AACU;AAQnD;IAIE,kBACU,WAAwB,EACxB,MAAc,EACd,WAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QANxC,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,IAAI,CAAC;IAMX,CAAC;IAEL,2BAAQ,GAAR;IACA,CAAC;IAED,0BAAO,GAAP;QAAA,iBAaC;QAZC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW;aACb,MAAM,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;aACzD,IAAI,CAAC,mBAAS;YACb,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC;YACpD,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC;QACJ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,6BAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAY;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;SACR;QACD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;QAE5B,IAAI,IAAI,CAAC,OAAO,EAAE;SAEjB;IACH,CAAC;;gBAvCsB,yDAAW;gBAChB,sDAAM;gBACD,gEAAiB;;IAP7B,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oIAA+B;;SAEhC,CAAC;+EAMuB,yDAAW;YAChB,sDAAM;YACD,gEAAiB;OAP7B,QAAQ,CA+CpB;IAAD,eAAC;CAAA;AA/CoB","file":"auth-auth-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Authenticate</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form #f1=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f1)\\\">\\n    <ion-grid>\\n      <ion-row  class=\\\"ion-justify-content-center\\\">\\n        <ion-col size-md=\\\"8\\\"> \\n          <ion-list>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">email</ion-label>\\n                <ion-input \\n                  type=\\\"email\\\" \\n                  ngModel \\n                  name=\\\"email\\\" \\n                  required \\n                  email\\n                  #emailCtrl=\\\"ngModel\\\"\\n                ></ion-input>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\">\\n                <ion-label color=\\\"danger\\\">\\n                  <small>Should be a valid email!</small>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">password</ion-label>\\n                <ion-input \\n                  type=\\\"password\\\" \\n                  ngModel \\n                  name=\\\"password\\\"\\n                  required \\n                  minlength=\\\"6\\\"\\n                  #passCtrl=\\\"ngModel\\\"\\n                ></ion-input>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"!passCtrl.valid && passCtrl.touched\\\">\\n                <ion-label color=\\\"danger\\\">\\n                  <small>Not long enough...that's what she said!!</small>\\n                </ion-label>\\n              </ion-item>\\n            </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size-sm=\\\"3\\\" >\\n          <ion-button \\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            (click)=\\\"onLogin()\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f1.valid\\\"\\n          >\\n            Login\\n          </ion-button>\\n          <ion-button \\n            type=\\\"button\\\"\\n            fill=\\\"clear\\\" color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            (click)=\\\"onToSignUp()\\\"\\n          >\\n            Not a Member?\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController \n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogin() {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'logging in...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        setTimeout(() => {\n          this.isLoading = false;\n          loadingEl.dismiss();\n          this.router.navigateByUrl('/places/tabs/discover')\n        }, 1500);\n      })\n    this.authService.login();\n  }\n\n  onToSignUp() {\n    this.isLogin = !this.isLogin;\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    console.log(email, password)\n\n    if (this.isLogin) {\n\n    }\n  }\n\n\n}\n"],"sourceRoot":""}